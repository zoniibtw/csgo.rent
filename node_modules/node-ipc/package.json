{
  "_from": "node-ipc",
  "_id": "node-ipc@10.0.2",
  "_inBundle": false,
  "_integrity": "sha512-YIHWoXxyAGE5HHhOpxNhcBd+6/ZwlQRB6N5ukiJR22CHhDyFlPkQl2Di/D3Eghn9AzgqiSPCdo38Nj670ELbaA==",
  "_location": "/node-ipc",
  "_phantomChildren": {
    "copyfiles": "2.4.1"
  },
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "node-ipc",
    "name": "node-ipc",
    "escapedName": "node-ipc",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-ipc/-/node-ipc-10.0.2.tgz",
  "_shasum": "4d95affc16cef45f1675eddea26bd3b24e01ad21",
  "_spec": "node-ipc",
  "_where": "C:\\Users\\test\\Documents\\GitHub\\csgo.rent",
  "author": {
    "name": "Brandon Nozaki Miller"
  },
  "bugs": {
    "url": "https://github.com/RIAEvangelist/node-ipc/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "event-pubsub": "5.0.3",
    "js-message": "1.0.7",
    "js-queue": "2.0.2",
    "strong-type": "^1.0.1"
  },
  "deprecated": false,
  "description": "A nodejs module for local and remote Inter Process Communication (IPC), Neural Networking, and able to facilitate machine learning.",
  "devDependencies": {
    "c8": "^7.7.3",
    "lcov2badge": "^0.1.2",
    "node-cmd": "^4.0.0",
    "node-http-server": "^8.1.4",
    "vanilla-test": "^1.4.8"
  },
  "directories": {
    "example": "example"
  },
  "engines": {
    "node": ">=14"
  },
  "homepage": "http://riaevangelist.github.io/node-ipc/",
  "keywords": [
    "IPC",
    "Neural Networking",
    "Machine Learning",
    "inter",
    "process",
    "communication",
    "unix",
    "windows",
    "win",
    "socket",
    "TCP",
    "UDP",
    "domain",
    "sockets",
    "threaded",
    "communication",
    "multi",
    "process",
    "shared",
    "memory"
  ],
  "license": "MIT",
  "main": "node-ipc.js",
  "name": "node-ipc",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/RIAEvangelist/node-ipc.git"
  },
  "scripts": {
    "coverage": "echo 'See your coverage report at http://localhost:8080' && node-http-server port=8080 root=./coverage/",
    "test": "npm i && c8 -r lcov -r html node test/CI.js && c8 report && node ./lcov.js"
  },
  "type": "module",
  "version": "10.0.2"
}
